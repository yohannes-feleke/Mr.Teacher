/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package English;

import java.awt.Color;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.*;
import static java.lang.Thread.sleep;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author JOH
 */
public class English extends javax.swing.JFrame {

    int x,y;
    
    public English() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        A = new javax.swing.JLabel();
        B = new javax.swing.JLabel();
        P = new javax.swing.JLabel();
        C = new javax.swing.JLabel();
        D = new javax.swing.JLabel();
        E = new javax.swing.JLabel();
        F = new javax.swing.JLabel();
        G = new javax.swing.JLabel();
        H = new javax.swing.JLabel();
        I = new javax.swing.JLabel();
        J = new javax.swing.JLabel();
        K = new javax.swing.JLabel();
        L = new javax.swing.JLabel();
        M = new javax.swing.JLabel();
        N = new javax.swing.JLabel();
        O = new javax.swing.JLabel();
        Q = new javax.swing.JLabel();
        R = new javax.swing.JLabel();
        S = new javax.swing.JLabel();
        T = new javax.swing.JLabel();
        U = new javax.swing.JLabel();
        W = new javax.swing.JLabel();
        V = new javax.swing.JLabel();
        X = new javax.swing.JLabel();
        Y = new javax.swing.JLabel();
        Z = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        smallL = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        playcapital = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(0, 0, 0));
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        A.setBackground(new java.awt.Color(0, 0, 0));
        A.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        A.setForeground(new java.awt.Color(255, 204, 0));
        A.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        A.setText("A");
        A.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        A.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AMouseClicked(evt);
            }
        });

        B.setBackground(new java.awt.Color(0, 0, 0));
        B.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        B.setForeground(new java.awt.Color(255, 204, 0));
        B.setText("B");
        B.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BMouseClicked(evt);
            }
        });

        P.setBackground(new java.awt.Color(0, 0, 0));
        P.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        P.setForeground(new java.awt.Color(255, 204, 0));
        P.setText("P");
        P.setOpaque(true);

        C.setBackground(new java.awt.Color(0, 0, 0));
        C.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        C.setForeground(new java.awt.Color(255, 204, 0));
        C.setText("C");
        C.setOpaque(true);

        D.setBackground(new java.awt.Color(0, 0, 0));
        D.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        D.setForeground(new java.awt.Color(255, 204, 0));
        D.setText("D");
        D.setOpaque(true);

        E.setBackground(new java.awt.Color(0, 0, 0));
        E.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        E.setForeground(new java.awt.Color(255, 204, 0));
        E.setText("E");
        E.setOpaque(true);

        F.setBackground(new java.awt.Color(0, 0, 0));
        F.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        F.setForeground(new java.awt.Color(255, 204, 0));
        F.setText("F");
        F.setOpaque(true);

        G.setBackground(new java.awt.Color(0, 0, 0));
        G.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        G.setForeground(new java.awt.Color(255, 204, 0));
        G.setText("G");
        G.setOpaque(true);

        H.setBackground(new java.awt.Color(0, 0, 0));
        H.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        H.setForeground(new java.awt.Color(255, 204, 0));
        H.setText("H");
        H.setOpaque(true);

        I.setBackground(new java.awt.Color(0, 0, 0));
        I.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        I.setForeground(new java.awt.Color(255, 204, 0));
        I.setText("I");
        I.setOpaque(true);

        J.setBackground(new java.awt.Color(0, 0, 0));
        J.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        J.setForeground(new java.awt.Color(255, 204, 0));
        J.setText("J");
        J.setOpaque(true);

        K.setBackground(new java.awt.Color(0, 0, 0));
        K.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        K.setForeground(new java.awt.Color(255, 204, 0));
        K.setText("K");
        K.setOpaque(true);

        L.setBackground(new java.awt.Color(0, 0, 0));
        L.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        L.setForeground(new java.awt.Color(255, 204, 0));
        L.setText("L");
        L.setOpaque(true);

        M.setBackground(new java.awt.Color(0, 0, 0));
        M.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        M.setForeground(new java.awt.Color(255, 204, 0));
        M.setText("M");
        M.setOpaque(true);

        N.setBackground(new java.awt.Color(0, 0, 0));
        N.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        N.setForeground(new java.awt.Color(255, 204, 0));
        N.setText("N");
        N.setOpaque(true);

        O.setBackground(new java.awt.Color(0, 0, 0));
        O.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        O.setForeground(new java.awt.Color(255, 204, 0));
        O.setText("O");
        O.setOpaque(true);

        Q.setBackground(new java.awt.Color(0, 0, 0));
        Q.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        Q.setForeground(new java.awt.Color(255, 204, 0));
        Q.setText("Q");
        Q.setOpaque(true);

        R.setBackground(new java.awt.Color(0, 0, 0));
        R.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        R.setForeground(new java.awt.Color(255, 204, 0));
        R.setText("R");
        R.setOpaque(true);

        S.setBackground(new java.awt.Color(0, 0, 0));
        S.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        S.setForeground(new java.awt.Color(255, 204, 0));
        S.setText("S");
        S.setOpaque(true);

        T.setBackground(new java.awt.Color(0, 0, 0));
        T.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        T.setForeground(new java.awt.Color(255, 204, 0));
        T.setText("T");
        T.setOpaque(true);

        U.setBackground(new java.awt.Color(0, 0, 0));
        U.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        U.setForeground(new java.awt.Color(255, 204, 0));
        U.setText("U");
        U.setOpaque(true);

        W.setBackground(new java.awt.Color(0, 0, 0));
        W.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        W.setForeground(new java.awt.Color(255, 204, 0));
        W.setText("W");
        W.setOpaque(true);

        V.setBackground(new java.awt.Color(0, 0, 0));
        V.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        V.setForeground(new java.awt.Color(255, 204, 0));
        V.setText("V");
        V.setOpaque(true);

        X.setBackground(new java.awt.Color(0, 0, 0));
        X.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        X.setForeground(new java.awt.Color(255, 204, 0));
        X.setText("X");
        X.setOpaque(true);

        Y.setBackground(new java.awt.Color(0, 0, 0));
        Y.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        Y.setForeground(new java.awt.Color(255, 204, 0));
        Y.setText("Y");
        Y.setOpaque(true);

        Z.setBackground(new java.awt.Color(0, 0, 0));
        Z.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        Z.setForeground(new java.awt.Color(255, 204, 0));
        Z.setText("Z");
        Z.setOpaque(true);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setOpaque(true);
        jLabel1.setPreferredSize(new java.awt.Dimension(1, 0));

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        smallL.setFont(new java.awt.Font("Times New Roman", 1, 320)); // NOI18N
        smallL.setForeground(new java.awt.Color(255, 255, 255));
        smallL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(U)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(A)
                                    .addComponent(F)
                                    .addComponent(K)
                                    .addComponent(P))))
                        .addGap(71, 71, 71)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(B)
                            .addComponent(G)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(L))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(Q))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(V)))
                        .addGap(82, 82, 82)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(R)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(C)
                                    .addComponent(H)
                                    .addComponent(M)))
                            .addComponent(W))
                        .addGap(66, 66, 66)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(D)
                                .addGap(71, 71, 71)
                                .addComponent(E))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(I)
                                .addGap(83, 83, 83)
                                .addComponent(J))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(X)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(Y)
                                        .addGap(4, 4, 4))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(N)
                                            .addComponent(S))
                                        .addGap(69, 69, 69)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(T)
                                            .addComponent(O)))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(Z)))
                .addGap(54, 54, 54)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(smallL, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(157, 157, 157))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(B)
                        .addGap(28, 28, 28)
                        .addComponent(G)
                        .addGap(40, 40, 40)
                        .addComponent(L)
                        .addGap(39, 39, 39)
                        .addComponent(Q)
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(V)
                            .addComponent(Y)
                            .addComponent(W)
                            .addComponent(X)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(C)
                        .addGap(28, 28, 28)
                        .addComponent(H)
                        .addGap(40, 40, 40)
                        .addComponent(M)
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(R)
                            .addComponent(T)
                            .addComponent(S)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(D)
                            .addComponent(E))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(I)
                            .addComponent(J))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(N)
                            .addComponent(O)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(A)
                        .addGap(28, 28, 28)
                        .addComponent(F)
                        .addGap(40, 40, 40)
                        .addComponent(K)
                        .addGap(39, 39, 39)
                        .addComponent(P)
                        .addGap(35, 35, 35)
                        .addComponent(U)
                        .addGap(27, 27, 27)
                        .addComponent(Z)))
                .addContainerGap(51, Short.MAX_VALUE))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(smallL, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel2MouseDragged(evt);
            }
        });
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel2MousePressed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(255, 51, 51));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton1.setText("X");
        jButton1.setFocusPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("SMALL LATTER");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("CAPITAL LATTER");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));
        jPanel3.setLayout(null);

        playcapital.setBackground(new java.awt.Color(255, 51, 51));
        playcapital.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        playcapital.setText("PLAY ALPHABET");
        playcapital.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 102), new java.awt.Color(255, 51, 51), new java.awt.Color(255, 255, 102), new java.awt.Color(255, 102, 51)));
        playcapital.setFocusPainted(false);
        playcapital.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        playcapital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playcapitalActionPerformed(evt);
            }
        });
        jPanel3.add(playcapital);
        playcapital.setBounds(460, 10, 170, 50);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AMouseClicked
        
        InputStream in1;
        try {
            in1 = new FileInputStream(new File("src\\Audiofile\\letters_sounds.wav"));
            AudioStream au1 = new AudioStream(in1);
            AudioPlayer.player.start(au1);
            sleep(1600);
            AudioPlayer.player.stop(au1);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(English.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(English.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(English.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_AMouseClicked

    private void playcapitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playcapitalActionPerformed
        
        Thread t = new Thread()
        {
           public void run()
           {
               try {
                   InputStream in;
                   in = new FileInputStream(new File("src\\Audiofile\\letters_sounds.wav"));
                   AudioStream ad = new AudioStream(in);
                   AudioPlayer.player.start(ad);
               } catch (Exception e) {
               }
               for (int i=0;i<=26;i++)
               {
                   if(i==0)
                   {
                       playcapital.setEnabled(false);
                       smallL.setText("a");
                       A.setForeground(Color.blue);
                       try {
                           sleep(1600);
                       } catch (InterruptedException ex) {
                           Logger.getLogger(English.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   }
                   else if(i==1)
                   {
                       smallL.setText("b");
                       A.setForeground(new Color(255,204,0));
                       B.setForeground(Color.blue);
                       try {
                           sleep(1600);
                       } catch (InterruptedException ex) {
                           Logger.getLogger(English.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   }
                   else if(i==2)
                   {
                       smallL.setText("c");
                       B.setForeground(new Color(255,204,0));
                       C.setForeground(Color.blue);
                       try {
                           sleep(1600);
                       } catch (InterruptedException ex) {
                           Logger.getLogger(English.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   }
                   else if(i==3)
                   {
                       smallL.setText("d");
                       C.setForeground(new Color(255,204,0));
                       D.setForeground(Color.blue);
                       try {
                           sleep(1600);
                       } catch (InterruptedException ex) {
                           Logger.getLogger(English.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   }
                   else if(i==4)
                   {
                       smallL.setText("e");
                       D.setForeground(new Color(255,204,0));
                       E.setForeground(Color.blue);
                       try {
                           sleep(1500);
                       } catch (InterruptedException ex) {
                           Logger.getLogger(English.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   }else if(i==5)
                   {
                       smallL.setText("f");
                       E.setForeground(new Color(255,204,0));
                       F.setForeground(Color.blue);
                       try {
                           sleep(1500);
                       } catch (InterruptedException ex) {
                           Logger.getLogger(English.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   }
                   else if(i==6)
                   {
                       smallL.setText("g");
                       F.setForeground(new Color(255,204,0));
                       G.setForeground(Color.blue);
                       try {
                           sleep(1500);
                       } catch (InterruptedException ex) {
                           Logger.getLogger(English.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   }
                   else if(i==7)
                   {
                       smallL.setText("h");
                       G.setForeground(new Color(255,204,0));
                       H.setForeground(Color.blue);
                       try {
                           sleep(1700);
                       } catch (InterruptedException ex) {
                           Logger.getLogger(English.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   }
                   else if(i==8)
                   {
                       smallL.setText("i");
                       H.setForeground(new Color(255,204,0));
                       I.setForeground(Color.blue);
                       try {
                           sleep(1700);
                       } catch (InterruptedException ex) {
                           Logger.getLogger(English.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   }
                   else if(i==9)
                   {
                       smallL.setText("j");
                       I.setForeground(new Color(255,204,0));
                       J.setForeground(Color.blue);
                       try {
                           sleep(1700);
                       } catch (InterruptedException ex) {
                           Logger.getLogger(English.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   }else if(i==10)
                   {
                       smallL.setText("k");
                       J.setForeground(new Color(255,204,0));
                       K.setForeground(Color.blue);
                       try {
                           sleep(1700);
                       } catch (InterruptedException ex) {
                           Logger.getLogger(English.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   }
                   else if(i==11)
                   {
                       smallL.setText("l");
                       K.setForeground(new Color(255,204,0));
                       L.setForeground(Color.blue);
                       try {
                           sleep(1700);
                       } catch (InterruptedException ex) {
                           Logger.getLogger(English.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   }
                   else if(i==12)
                   {
                       smallL.setText("m");
                       L.setForeground(new Color(255,204,0));
                       M.setForeground(Color.blue);
                       try {
                           sleep(1700);
                       } catch (InterruptedException ex) {
                           Logger.getLogger(English.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   }
                   else if(i==13)
                   {
                       smallL.setText("n");
                       M.setForeground(new Color(255,204,0));
                       N.setForeground(Color.blue);
                       try {
                           sleep(1700);
                       } catch (InterruptedException ex) {
                           Logger.getLogger(English.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   }
                   else if(i==14)
                   {
                       smallL.setText("o");
                       N.setForeground(new Color(255,204,0));
                       O.setForeground(Color.blue);
                       try {
                           sleep(1700);
                       } catch (InterruptedException ex) {
                           Logger.getLogger(English.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   }
                   else if(i==15)
                   {
                       smallL.setText("p");
                       O.setForeground(new Color(255,204,0));
                       P.setForeground(Color.blue);
                       try {
                           sleep(1700);
                       } catch (InterruptedException ex) {
                           Logger.getLogger(English.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   }
                   else if(i==16)
                   {
                       smallL.setText("q");
                       P.setForeground(new Color(255,204,0));
                       Q.setForeground(Color.blue);
                       try {
                           sleep(1600);
                       } catch (InterruptedException ex) {
                           Logger.getLogger(English.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   }
                   else if(i==17)
                   {
                       smallL.setText("r");
                       Q.setForeground(new Color(255,204,0));
                       R.setForeground(Color.blue);
                       try {
                           sleep(1600);
                       } catch (InterruptedException ex) {
                           Logger.getLogger(English.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   }
                   else if(i==18)
                   {
                       smallL.setText("s");
                       R.setForeground(new Color(255,204,0));
                       S.setForeground(Color.blue);
                       try {
                           sleep(1600);
                       } catch (InterruptedException ex) {
                           Logger.getLogger(English.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   }
                   else if(i==19)
                   {
                       smallL.setText("t");
                       S.setForeground(new Color(255,204,0));
                       T.setForeground(Color.blue);
                       try {
                           sleep(1500);
                       } catch (InterruptedException ex) {
                           Logger.getLogger(English.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   }
                   else if(i==20)
                   {
                       smallL.setText("u");
                       T.setForeground(new Color(255,204,0));
                       U.setForeground(Color.blue);
                       try {
                           sleep(1500);
                       } catch (InterruptedException ex) {
                           Logger.getLogger(English.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   }
                   else if(i==21)
                   {
                       smallL.setText("v");
                       U.setForeground(new Color(255,204,0));
                       V.setForeground(Color.blue);
                       try {
                           sleep(1500);
                       } catch (InterruptedException ex) {
                           Logger.getLogger(English.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   }
                   else if(i==22)
                   {
                       smallL.setText("w");
                       V.setForeground(new Color(255,204,0));
                       W.setForeground(Color.blue);
                       try {
                           sleep(1500);
                       } catch (InterruptedException ex) {
                           Logger.getLogger(English.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   }
                   else if(i==23)
                   {
                       smallL.setText("x");
                       W.setForeground(new Color(255,204,0));
                       X.setForeground(Color.blue);
                       try {
                           sleep(1500);
                       } catch (InterruptedException ex) {
                           Logger.getLogger(English.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   }
                   else if(i==24)
                   {
                       smallL.setText("y");
                       X.setForeground(new Color(255,204,0));
                       Y.setForeground(Color.blue);
                       try {
                           sleep(1500);
                       } catch (InterruptedException ex) {
                           Logger.getLogger(English.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   }
                   else if(i==25)
                   {
                       smallL.setText("z");
                       Y.setForeground(new Color(255,204,0));
                       Z.setForeground(Color.blue);
                       try {
                           sleep(1500);
                       } catch (InterruptedException ex) {
                           Logger.getLogger(English.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   }
                   else if(i==26)
                   {
                       playcapital.setEnabled(true);
                       smallL.setText("");
                       Z.setForeground(new Color(255,204,0));
                       try {
                           sleep(1600);
                       } catch (InterruptedException ex) {
                           Logger.getLogger(English.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   }
               }
           }
        };
        t.start();
    }//GEN-LAST:event_playcapitalActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        System.exit(0);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jPanel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseDragged
        int xx,yy;
        
        xx = evt.getXOnScreen();
        yy = evt.getYOnScreen();
        this.setLocation(xx-x,yy-y);
    }//GEN-LAST:event_jPanel2MouseDragged

    private void jPanel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_jPanel2MousePressed

    private void BMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BMouseClicked
        
    }//GEN-LAST:event_BMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new English().setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JLabel A;
    public static javax.swing.JLabel B;
    public static javax.swing.JLabel C;
    public static javax.swing.JLabel D;
    public static javax.swing.JLabel E;
    public static javax.swing.JLabel F;
    public static javax.swing.JLabel G;
    public static javax.swing.JLabel H;
    public static javax.swing.JLabel I;
    public static javax.swing.JLabel J;
    public static javax.swing.JLabel K;
    public static javax.swing.JLabel L;
    public static javax.swing.JLabel M;
    public static javax.swing.JLabel N;
    public static javax.swing.JLabel O;
    public static javax.swing.JLabel P;
    public static javax.swing.JLabel Q;
    public static javax.swing.JLabel R;
    public static javax.swing.JLabel S;
    public static javax.swing.JLabel T;
    public static javax.swing.JLabel U;
    public static javax.swing.JLabel V;
    public static javax.swing.JLabel W;
    public static javax.swing.JLabel X;
    public static javax.swing.JLabel Y;
    public static javax.swing.JLabel Z;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private static javax.swing.JLabel jLabel4;
    private static javax.swing.JPanel jPanel1;
    public static javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    public static javax.swing.JButton playcapital;
    private static javax.swing.JLabel smallL;
    // End of variables declaration//GEN-END:variables
}
